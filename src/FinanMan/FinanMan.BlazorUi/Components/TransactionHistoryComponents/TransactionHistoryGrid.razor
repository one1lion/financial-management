@using FinanMan.Database.Models.Tables
@using FinanMan.Shared.DataEntryModels

<section class="transaction-history">
    <table id="tblTransactionHistory-@_id" class="data-grid" aria-label="@SharedLocalizerService.TransactionHistoryTableDescription">
        <colgroup id="postedDateCol" />
        <colgroup id="transDateCol" />
        <colgroup id="accountCol" />
        <colgroup id="payeeCol" />
        <colgroup id="memoCol" />
        <colgroup id="amountCol" />
        <thead>
            <tr>
                <td colspan="6">
                    @SharedLocalizerService.SortInfoLabel
                    @if (!_sortColumns.Any())
                    {
                        <span> @SharedLocalizerService.NoSortText</span>
                    }
                    else
                    {
                        <span> @string.Join(", ", _sortColumns.Select(x => $"{x.Column} {(x.Descending ? "Desc": "Asc")}"))</span>
                    }
                </td>
            </tr>
            <tr>
                @foreach (var curCol in Enum.GetValues<ColumnName>())
                {
                    var sortCol = _sortColumns.FirstOrDefault(x => x.Column == curCol);

                    <th scope="col" @onclick="_ => HandleColumnHeaderClicked(curCol)">
                        <div class="header-content">
                            <span class="header-text">@curCol.GetDisplayText()</span>
                            <span class="sort-dir">
                                @if (sortCol is not null)
                                {
                                    @(sortCol.Descending ? "v" : "^") <sub>@(_sortColumns.IndexOf(sortCol))</sub>
                                }
                            </span>
                            <div class="filter-button" @onclick:stopPropagation=true>
                                <span class="icon" tabindex="0">\|/</span>
                                <ul class="context-menu filter-menu" tabindex="0">
                                    <li class="menu-item@(GetSortedDir(curCol) == SortDir.Asc ? " disabled" : "")" @onclick="_ => SortByColumn(curCol, SortDir.Asc)">Sort Ascending</li>
                                    <li class="menu-item@(GetSortedDir(curCol) == SortDir.Desc ? " disabled" : "")" @onclick="_ => SortByColumn(curCol, SortDir.Desc)">Sort Descending</li>
                                    <li class="menu-item@(GetSortedDir(curCol) == SortDir.None ? " disabled" : "")" @onclick="_ => SortByColumn(curCol, SortDir.None)">Clear Sort</li>
                                    <li class="divider"><hr /></li>
                                    <li class="menu-item">Filter</li>
                                    <li class="menu-item">Clear Filter</li>
                                </ul>
                            </div>
                        </div>
                        <div class="resize-handle">
                        </div>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @if (DisplayedTransactions is null)
            {
                <tr>
                    <td colspan="6">@SharedLocalizerService.Loading</td>
                </tr>
            }
            else if (!DisplayedTransactions.Any())
            {
                <tr>
                    <td colspan="6">@SharedLocalizerService.NoTransactionsMessage</td>
                </tr>
            }
            else
            {
                // Since _transactions is not null here, neither is SortedTransactions
                foreach (var curTransaction in DisplayedTransactions.Where(x => x is not null))
                {
                    @switch (curTransaction)
                    {
                        case PaymentEntryViewModel payment:
                            <PaymentHistoryRow Transaction=payment />
                            break;
                        case TransferEntryViewModel transfer:
                            <TransferHistoryRow Transaction=transfer />
                            break;
                        case DepositEntryViewModel deposit:
                            <DepositHistoryRow Transaction=deposit />
                            break;
                        default:
                            <tr>
                                <td colspan="6">@SharedLocalizerService.InvalidTransactionTypeMessage</td>
                            </tr>
                            break;
                    }
                }
            }
        </tbody>
    </table>
</section>

<TemplatedModal @bind-Show=_showPostedDateEntry>

</TemplatedModal>